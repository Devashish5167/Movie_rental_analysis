SELECT * FROM SAKILA. FILM;

-- ALL THE FILMS WITH G-13 RATING WITH RENTAL RATE OF 2.99 OR LOWER
SELECT * FROM FILM F
WHERE F.RENTAL_RATE  <= 2.99
AND F.RATINGS = 'PG-13';

-- ALLL FILMS THAT HAVE DELETED SCENES
SELECT F.TITLE, F.SPECIAL_FEATURES, F.RELEASE_YEAR
	FROM FILM F
WHERE F.SPECIAAL_FEATURES LIKE '%DELETED SCENED%'
	AND F.TITLE LIKE 'C%';

-- ALL ACTIVE CUSTOMERS
SELECT * FROM CUSTOMERS 
WHERE ACTIVE = 1;

-- NAME OF CUSTOMERS WHON RENTED A MOVIE ON 26TH JULY 2005
SELECT R.RENTAL_ID, R.RENTAL_DATE, R.CUSTOMER_ID,
	CONCAT(C.FIRST_NAME," ",  C.LAST_NAME) AS CUSTOMER_NAME
	FROM RENTAL R 
	JOIN CUSTOMERS C ON C.CUSTOMER_ID=R.CUSTOMER_ID
WHERE DATE(R.RENTAL_DATE) = '2005-07-26';

-- DISTINCT NAME OF CUSTOMERS WHO RENTED MOVIE ON 26TH JULY 2005
SELECT DISTINCT R.CUSTOMER_ID,
	CONCAT(C.FIRST_NAME," ",  C.LAST_NAME) AS CUSTOMER_NAME
	FROM RENTAL R 
	JOIN CUSTOMERS C ON C.CUSTOMER_ID=R.CUSTOMER_ID
WHERE DATE(R.RENTAL_DATE) = '2005-07-26';

-- HOW MANY RENTALS WE DO EACH DAY?
SELECT date(RENTAL_DATE) D, COUNT(*) FROM RENTAL
GROUP BY DATE(RENTAL_DATE);

-- ALL SCI-FI MOVIES IN OUR CATALOG
SELECT FC.FILM_ID, FC.CATEGORY_ID, C.NAME, F.TITLE, F.RELEASE_YEAR FROM FILM_CATEGORY FC
JOIN CATEGORY C ON C.CATEGORY_ID = FC.CATEGORY_ID
JOIN FILM F ON F.FILM_ID = FC.FILM_ID
WHERE C.NAME = 'SCI-FI';

-- CUSTOMERS AND HOW MANY MOVIES MOVIES THEY RENTED FROM US SO FAR 
SELECT R.CUSTOMER_ID, C.FIRST_NAME, C.EMAIL, COUNT(*) 'COUNT'
FROM RENTAL R
JOIN CUSTOMER C ON C.CUSTOMER_ID = R.CUSTOMER_ID
group by R.CUSTOMER_ID
order by COUNT(*) DESC;

-- WHICH MOVIE SHOULD WE DISCONTINUE FROM OUR CATALOGUE (LESS THAN 1 TIME LIFETIME RENTALS)
WITH LOW_RENTALS AS(SELECT INVENTORY_ID, COUNT(*)
	FROM RENTAL R
	GROUP BY INVENTORY_ID
	HAVING COUNT(*) <= 1)
SELECT LOW_RENTALS. INVENTORY_ID, I.FILM_ID, F.TITLE
FROM LOW_RENTALS
JOIN INVENTORY I ON I.INVENTORY_ID = LOW_RENTALS.INVENTORY_ID
JOIN FILM F ON F.FILM+ID = I.FILM_ID;

-- WHICH MOVIES ARE NOT YET RETURNED 
SELECT  RENTAL_DATE, CUSTOMER_ID, I.FILM_ID, F.TITLE 
FROM RENTALS R
JOIN INVENTORY I ON I.INVENTORY_ID = R.INVENTORY_ID
JOIN FILM F ON F.FILM_ID = I.FILM_ID
WHERE R.RETURN_DATE IS NULL
ORDER BY F.TITLE;
